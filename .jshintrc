{
    // JSHint Default Configuration File (as on JSHint website)
    // See http://jshint.com/docs/ for more details

    "maxerr": 10, // {int} Maximum error before stopping

    // Enforcing
    "bitwise": true, // true: Prohibit bitwise operators (&, |, ^, etc.)
    "curly": true, // true: Require {} for every new block or scope
    "eqeqeq": true, // true: Require triple equals (===) for comparison
    "esversion": 5, // {number} 3, 5, or 6, specifying the ECMAScript version to which the code must adhere.
    "futurehostile": false, // true: enables warnings about identifiers which are defined in future JS versions
    "forin": true, // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze": true, // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "funcscope": false, // true: Tolerate defining variables inside control statements
    "iterator": false, // true: Tolerate using the `__iterator__` property
    "latedef": true, // true: Require variables/functions to be defined before being used
    "noarg": true, // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "nocomma": true, // true: prohibit use of comma operator
    "noempty": true, // true: Prohibit use of empty blocks
    "nonbsp": true, // true: Prohibit "non-breaking whitespace" characters.
    "nonew": false, // true: Prohibit use of constructors for side-effects (without assignment)
    "notypeof": false, // true: Tolerate invalid typeof operator values
    "undef": true, // true: Require all non-global variables to be declared (prevents global leaks)
    "unused": true, // Unused variables:
    //   true     : all variables, last function parameter
    //   "vars"   : all variables only
    //   "strict" : all variables, all function parameters
    "shadow": false, // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "singleGroups": true, // true: prohibits use of grouping operator when not strictly required
    "strict": true, // true: Requires all functions run in ES5 Strict Mode
    "maxparams": false, // {int} Max number of formal params allowed per function
    "maxdepth": false, // {int} Max depth of nested blocks (within functions)
    "maxstatements": false, // {int} Max number statements per function
    "maxcomplexity": false, // {int} Max cyclomatic complexity per function
    "varstmt": false, // true: Disallow any var statements. Only `let` and `const` are allowed.

    // Relaxing
    "asi": false, // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss": false, // true: Tolerate assignments where comparisons would be expected
    "debug": false, // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull": true, // true: Tolerate use of `== null`
    "evil": false, // true: Tolerate use of `eval` and `new Function()`
    "expr": false, // true: Tolerate `ExpressionStatement` as Programs
    "lastsemic": false, // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "loopfunc": false, // true: Tolerate functions being defined in loops
    "noyield": false, // true: Tolerate generator functions with no yield statement in them.
    "plusplus": false, // true: Prohibit use of `++` & `--`
    "proto": false, // true: Tolerate using the `__proto__` property
    "scripturl": false, // true: Tolerate script-targeted URLs
    "supernew": false, // true: Tolerate `new function () { ... };` and `new Object;`
    "validthis": false, // true: Tolerate using this in a non-constructor function
    "withstmt": false, // true: tolerate use of with statement

    // Environments
    "browser": true, // Web Browser (window, document, etc)
    "browserify": false, // Browserify (node.js code in the browser)
    "couch": false, // CouchDB
    "devel": true, // Development/debugging (alert, confirm, etc)
    "dojo": false, // Dojo Toolkit
    "jasmine": false, // Jasmine
    "jquery": true, // jQuery
    "mocha": false, // Mocha
    "mootools": false, // MooTools
    "node": true, // Node.js
    "nonstandard": false, // Widely adopted globals (escape, unescape, etc)
    "phantom": false, // PhantomJS
    "prototypejs": false, // Prototype and Scriptaculous
    "qunit": false, // QUnit
    "rhino": false, // Rhino
    "shelljs": false, // ShellJS
    "typed": false, // Globals for typed array constructions
    "worker": false, // Web Workers
    "wsh": false, // Windows Scripting Host
    "yui": false, // Yahoo User Interface

    // Custom Globals
    "globals": {
        "process": true,
        "require": true,
        "browser": true,
        "beforeAll": true,
        "afterAll": true,
        "expect": true,
        "it": true,
        "element": true,
        "by": true,
        "module": true,
        "setTimeout": true,
        "Buffer": true,
        "global": true
    }
}
